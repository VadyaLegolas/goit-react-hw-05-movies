{"version":3,"file":"static/js/242.c474f2d3.chunk.js","mappings":"8MAMA,MAwDA,EAxDgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MAEbC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,OACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAoBnC,OAlBAK,EAAAA,EAAAA,YAAU,KACiBC,WACvB,IACEJ,GAAa,GACb,MAAMK,QAAoBC,EAAAA,EAAAA,IAAgBZ,GAC1C,GAAmC,IAA/BW,EAAYE,QAAQC,OACtB,MAAM,IAAIC,MAAM,4CAElBZ,EAAeQ,EACjB,CAAE,MAAOJ,GACPC,EAASD,EACX,CAAC,QACCD,GAAa,EACf,GAEFU,EAAkB,GACjB,CAAChB,KAGFiB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGd,IACCe,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CACNC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,kBACbC,MAAM,OACNC,gBAAgB,cAIrBtB,IAASa,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,EAAMuB,UACnB5B,IACCe,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,IACDjB,EAAYW,QAAQkB,KAAIC,IACvBf,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAASa,EAAQC,WACpBb,EAAAA,EAAAA,KAAA,KAAAD,SAAIa,EAAQE,YAFLF,EAAQG,WAOtB,C,sEC1DP,MAGMC,EAAW,gCAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINC,EAAehC,iBAA+B,IAAxBiC,EAASC,UAAA9B,OAAA,QAAA+B,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAC7C,MAAME,QAAuBC,MAAM,GAADC,OAAIZ,EAAQ,mBAAAY,OAAkBL,EAAS,KAAKN,GAC9E,aAAaS,EAAeG,MAC9B,EAEaC,EAAexC,UAC1B,MAAMyC,QAAoBJ,MAAM,GAADC,OAC1BZ,EAAQ,0CAAAY,OAAyCI,GACpDf,GAEF,aAAac,EAAYF,MAAM,EAGpBI,EAAkB3C,UAC7B,MAAM4C,QAA2BP,MAAM,GAADC,OAAIZ,EAAQ,UAAAY,OAAShD,GAAWqC,GACtE,aAAaiB,EAAmBL,MAAM,EAG3BM,EAAkB7C,UAC7B,MAAM8C,QAAqBT,MAAM,GAADC,OAC3BZ,EAAQ,UAAAY,OAAShD,EAAO,YAC3BqC,GAEF,aAAamB,EAAaP,MAAM,EAGrBrC,EAAkBF,UAC7B,MAAM+C,QAAqBV,MAAM,GAADC,OAC3BZ,EAAQ,UAAAY,OAAShD,EAAO,YAC3BqC,GAEF,aAAaoB,EAAaR,MAAM,C","sources":["components/Reviews/Reviews.jsx","components/services/themoviebd-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Comment } from 'react-loader-spinner';\n\nimport { GetMovieReviews } from 'components/services/themoviebd-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [movieReview, setMovieReview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // Изменено на null для начального состояния\n\n  useEffect(() => {\n    const fetchMovieReview = async () => {\n      try {\n        setIsLoading(true);\n        const fetchReview = await GetMovieReviews(movieId);\n        if (fetchReview.results.length === 0) {\n          throw new Error(\"We don't have any reviews for this movie\"); // Исправлено на строку в кавычках\n        }\n        setMovieReview(fetchReview);\n      } catch (error) {\n        setError(error); // Установка объекта ошибки\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieReview();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <h2>\n          <Comment\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"comment-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"comment-wrapper\"\n            color=\"#fff\"\n            backgroundColor=\"#F4442E\"\n          />\n        </h2>\n      )}\n      {error && <p>{error.message}</p>}\n      {movieReview && (\n        <ul> {/* Обертка в список */}\n          {movieReview.results.map(element => (\n            <li key={element.id}>\n              <b>Author: {element.author}</b>\n              <p>{element.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY_ACCESS =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTE1MDIzZDViOWQ3ZWRjMWE4NDhhY2YxODc2YjQ0NSIsInN1YiI6IjY2MGU1N2E5NmRjNTA3MDE2NDU2NGYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7g5_S73d_kmCsOujpak_TASQ3OBWAJbyGG52uGpicY8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + API_KEY_ACCESS,\n  },\n};\n\nexport const GetTrendings = async (timeframe = \"day\" ) => {\n  const fetchTrendings = await fetch(`${BASE_URL}trending/movie/${timeframe} `, options);\n  return await fetchTrendings.json();\n};\n\nexport const SearchMovies = async query => {\n  const fetchMovies = await fetch(\n    `${BASE_URL}search/movie?include_adult=true&query=${query}`,\n    options\n  );\n  return await fetchMovies.json();\n};\n\nexport const GetMovieDetails = async movieId => {\n  const fetchMoviesDetails = await fetch(`${BASE_URL}movie/${movieId}`, options);\n  return await fetchMoviesDetails.json();\n};\n\nexport const GetMovieCredits = async movieId => {\n  const fetchCredits = await fetch(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return await fetchCredits.json();\n};\n\nexport const GetMovieReviews = async movieId => {\n  const fetchReviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return await fetchReviews.json();\n};\n"],"names":["Reviews","movieId","useParams","movieReview","setMovieReview","useState","isLoading","setIsLoading","error","setError","useEffect","async","fetchReview","GetMovieReviews","results","length","Error","fetchMovieReview","_jsxs","_Fragment","children","_jsx","Comment","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","backgroundColor","message","map","element","author","content","id","BASE_URL","options","method","headers","accept","Authorization","GetTrendings","timeframe","arguments","undefined","fetchTrendings","fetch","concat","json","SearchMovies","fetchMovies","query","GetMovieDetails","fetchMoviesDetails","GetMovieCredits","fetchCredits","fetchReviews"],"sourceRoot":""}