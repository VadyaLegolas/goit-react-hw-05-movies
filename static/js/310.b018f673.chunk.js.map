{"version":3,"file":"static/js/310.b018f673.chunk.js","mappings":"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","sources":["components/services/themoviebd-api.js","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["const API_KEY_ACCESS =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTE1MDIzZDViOWQ3ZWRjMWE4NDhhY2YxODc2YjQ0NSIsInN1YiI6IjY2MGU1N2E5NmRjNTA3MDE2NDU2NGYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7g5_S73d_kmCsOujpak_TASQ3OBWAJbyGG52uGpicY8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + API_KEY_ACCESS,\n  },\n};\n\nexport const GetTrendings = async () => {\n  const fetchTrendings = await fetch(`${BASE_URL}trending/movie/day`, options);\n  return await fetchTrendings.json();\n};\n\nexport const SearchMovies = async query => {\n  const fetchMovies = await fetch(\n    `${BASE_URL}search/movie?include_adult=true&query=${query}`,\n    options\n  );\n  return await fetchMovies.json();\n};\n\nexport const GetMovieDetails = async movieId => {\n  const fetchMoviesDetails = await fetch(`${BASE_URL}movie/${movieId}`, options);\n  return await fetchMoviesDetails.json();\n};\n\nexport const GetMovieCredits = async movieId => {\n  const fetchCredits = await fetch(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return await fetchCredits.json();\n};\n\nexport const GetMovieReviews = async movieId => {\n  const fetchReviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return await fetchReviews.json();\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  margin-right: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  margin-bottom: 10px;\n  text-decoration: none;\n  border: none;\n  border-radius: 10px;\n  padding: 0 10px 2px 10px;\n  color: black;\n  background-color: aqua;\n  font-weight: 700;\n  &:hover,\n  &:focus {\n    background-color: orange;\n  }\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\n\nimport { GetMovieDetails } from 'components/services/themoviebd-api';\nimport { BackLink, Div, Img } from './MovieDetails.styled';\nimport noImg from '../images/No-Image-Placeholder.svg.png';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const [movieDetail, setMovieDetail] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const moviesFetch = await GetMovieDetails(movieId);\n        setMovieDetail(moviesFetch);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  return (\n    <>\n      <h1>Movie details</h1>\n      <p>\n        <BackLink to={backLinkLocationRef.current}>â†© Go back</BackLink>\n      </p>\n      {isLoading && (\n        <h2>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"color-ring-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"color-ring-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </h2>\n      )}\n      {error && <h2>{error.message}</h2>}\n      {movieDetail && (\n        <>\n          <Div>\n            <Img\n              src={\n                movieDetail.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieDetail.poster_path}`\n                  : noImg\n              }\n              width=\"300\"\n              alt={MovieDetails.title}\n            />\n            <div>\n              <h2>\n                {movieDetail.original_title}{' '}\n                {movieDetail.release_date\n                  ? ` (${movieDetail.release_date.slice(0, 4)})`\n                  : ''}\n              </h2>\n              <p>User score: {Math.round(movieDetail.vote_average * 10)}%</p>\n              <h3>Overview:</h3>\n              <p>\n                {movieDetail.overview !== ''\n                  ? movieDetail.overview\n                  : 'No description'}\n              </p>\n              <h3>Genres:</h3>\n              <p>\n                {movieDetail.genres.length === 0\n                  ? 'No genres'\n                  : movieDetail.genres.map(element => element.name + ' ')}\n              </p>\n            </div>\n          </Div>\n          <hr />\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <hr />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","options","method","headers","accept","Authorization","GetTrendings","async","fetchTrendings","fetch","concat","json","SearchMovies","fetchMovies","query","GetMovieDetails","fetchMoviesDetails","movieId","GetMovieCredits","fetchCredits","GetMovieReviews","fetchReviews","Div","styled","div","_templateObject","_taggedTemplateLiteral","Img","img","_templateObject2","BackLink","Link","_templateObject3","MovieDetails","_location$state$from","_location$state","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","movieDetail","setMovieDetail","useState","isLoading","setIsLoading","error","setError","useEffect","moviesFetch","fetchMovieDetails","_jsxs","_Fragment","children","_jsx","to","current","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","message","src","poster_path","noImg","alt","title","original_title","release_date","slice","Math","round","vote_average","overview","genres","length","map","element","name","Suspense","fallback","Outlet"],"sourceRoot":""}