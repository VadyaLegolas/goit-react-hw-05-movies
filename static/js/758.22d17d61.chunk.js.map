{"version":3,"file":"static/js/758.22d17d61.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/services/themoviebd-api.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const MovieImg = styled.img`\n  margin-right: 10px;\n`;\n","import { List, MovieImg, MovieItem, MovieLink } from './MoviesList.styled';\nimport noImg from '../../images/no_image.jpg';\n\nfunction MoviesList({ list, location, path = '' }) {\n  return (\n    <List>\n      {list.map(movie => (\n        // Ключ перемещен на элемент MovieLink\n        <MovieLink key={movie.id} to={`${path}${movie.id}`} state={{ from: location }}>\n          <MovieItem>\n            <MovieImg\n              // Исправлена интерполяция строки\n              src={movie.backdrop_path ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` : noImg}\n              width=\"100\"\n              // Указан альтернативный текст для изображения\n              alt={`Poster for ${movie.title}`}\n            />\n            {movie.title}\n            {/* Условное отображение года выпуска */}\n            {movie.release_date && ` (${movie.release_date.slice(0, 4)})`}\n          </MovieItem>\n        </MovieLink>\n      ))}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","const API_KEY_ACCESS =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTE1MDIzZDViOWQ3ZWRjMWE4NDhhY2YxODc2YjQ0NSIsInN1YiI6IjY2MGU1N2E5NmRjNTA3MDE2NDU2NGYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7g5_S73d_kmCsOujpak_TASQ3OBWAJbyGG52uGpicY8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + API_KEY_ACCESS,\n  },\n};\n\nexport const GetTrendings = async (timeframe) => {\n  const fetchTrendings = await fetch(`${BASE_URL}trending/movie/${timeframe} `, options);\n  return await fetchTrendings.json();\n};\n\nexport const SearchMovies = async query => {\n  const fetchMovies = await fetch(\n    `${BASE_URL}search/movie?include_adult=true&query=${query}`,\n    options\n  );\n  return await fetchMovies.json();\n};\n\nexport const GetMovieDetails = async movieId => {\n  const fetchMoviesDetails = await fetch(`${BASE_URL}movie/${movieId}`, options);\n  return await fetchMoviesDetails.json();\n};\n\nexport const GetMovieCredits = async movieId => {\n  const fetchCredits = await fetch(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return await fetchCredits.json();\n};\n\nexport const GetMovieReviews = async movieId => {\n  const fetchReviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return await fetchReviews.json();\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.form`\n  position: relative;\n  width: 300px; /* Ширина поля поиска */\n  margin: 20px auto; /* Отступы по краям */\n`;\nexport const Input = styled.input`\n   width: calc(100% - 20px); /* Ширина поля минус ширина кнопки */\n  padding: 10px;\n  font: inherit;\n  font-size: 18px;\n  border: 1px solid #ccc;\n  border-radius: 20px; /* Радиус закругления */\n  outline: none;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\nexport const Button = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 40px; /* Ширина кнопки */\n  height: 100%;\n  background-color: transparent;\n  border: none;\n  border-left: 2px solid #ccc;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { Wrapper, Input, Button } from \"./SearchBox.styled\";\nimport { HiSearch } from \"react-icons/hi\";\n\nconst SearchBox = ({ onSubmit }) => {\n  return (\n <> \n   <Wrapper onSubmit={onSubmit}>\n    <Input type=\"text\" placeholder=\"Поиск...\" name=\"query\" />\n    <Button type=\"submit\"><HiSearch size={'20px'} /></Button>\n  </Wrapper>\n </>\n   \n  );\n};\n\nexport default SearchBox","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nimport { SearchMovies } from 'components/services/themoviebd-api';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      setMovies(null);\n      setError(null);\n      try {\n        const { results } = await SearchMovies(searchValue);\n        if (results.length === 0) {\n          throw new Error(\n            `We don't have any movies for this query \"${searchValue}\"`\n          );\n        }\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [searchValue]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let searchQuery = e.target.query.value;\n    if (searchQuery.trim() === '') {\n      setSearchParams({});\n      setMovies(null);\n      setError({message: 'Enter a search query'});\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <SearchBox onSubmit={handleSubmit}></SearchBox>\n      {isLoading && (\n        <MagnifyingGlass\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"magnifying-glass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"magnifying-glass-wrapper\"\n          glassColor=\"#c0efff\"\n          color=\"#e15b64\"\n        />\n      )}\n      {error && <h2>{error.message}</h2>}\n\n      {movies && <MoviesList list={movies} location={location} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","MovieLink","Link","_templateObject2","MovieItem","li","_templateObject3","MovieImg","img","_templateObject4","_ref","list","location","path","_jsx","children","map","movie","to","concat","id","state","from","_jsxs","src","backdrop_path","noImg","width","alt","title","release_date","slice","BASE_URL","options","method","headers","accept","Authorization","GetTrendings","async","fetchTrendings","fetch","timeframe","json","SearchMovies","fetchMovies","query","GetMovieDetails","fetchMoviesDetails","movieId","GetMovieCredits","fetchCredits","GetMovieReviews","fetchReviews","Wrapper","form","Input","input","Button","button","onSubmit","_Fragment","type","placeholder","name","HiSearch","size","Movies","_searchParams$get","movies","setMovies","useState","isLoading","setIsLoading","error","setError","useLocation","searchParams","setSearchParams","useSearchParams","searchValue","get","useEffect","results","length","Error","SearchBox","e","preventDefault","searchQuery","target","value","trim","message","reset","MagnifyingGlass","visible","height","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","MoviesList"],"sourceRoot":""}