{"version":3,"file":"static/js/6.02a27560.chunk.js","mappings":"qSAOA,MAqEA,EArEaA,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MAEbC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,OACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,WAAS,GAiBnC,OAfAK,EAAAA,EAAAA,YAAU,KACeC,WACrB,IACEJ,GAAa,GACb,MAAMK,QAAkBC,EAAAA,EAAAA,IAAgBZ,GACxCG,EAAaQ,EACf,CAAE,MAAOJ,GACPC,EAASD,EACX,CAAC,QACCD,GAAa,EACf,GAEFO,EAAgB,GACf,CAACb,KAGFc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGX,IACCY,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,SAAS,MAIdlB,IAASU,EAAAA,EAAAA,KAAA,MAAAD,SAAKT,EAAMmB,UACpBxB,IACCe,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAC6B,IAA1Bd,EAAUyB,KAAKC,QACdX,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0CAEHd,EAAUyB,KAAKE,KAAIC,IAEfhB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEc,IACED,EAAQE,aAAY,kCAAAC,OACkBH,EAAQE,cAC1CE,EAENd,MAAM,MACNe,IAAKL,EAAQM,QAEfnB,EAAAA,EAAAA,KAAA,MAAAD,SAAKc,EAAQM,QACbtB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAc,IAAEc,EAAQO,sBAQxC,C,sECxEP,MAGMC,EAAW,gCAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINC,EAAelC,UAC1B,MAAMmC,QAAuBC,MAAM,GAADb,OAAIK,EAAQ,sBAAsBC,GACpE,aAAaM,EAAeE,MAAM,EAGvBC,EAAetC,UAC1B,MAAMuC,QAAoBH,MAAM,GAADb,OAC1BK,EAAQ,0CAAAL,OAAyCiB,GACpDX,GAEF,aAAaU,EAAYF,MAAM,EAGpBI,EAAkBzC,UAC7B,MAAM0C,QAA2BN,MAAM,GAADb,OAAIK,EAAQ,UAAAL,OAASjC,GAAWuC,GACtE,aAAaa,EAAmBL,MAAM,EAG3BnC,EAAkBF,UAC7B,MAAM2C,QAAqBP,MAAM,GAADb,OAC3BK,EAAQ,UAAAL,OAASjC,EAAO,YAC3BuC,GAEF,aAAac,EAAaN,MAAM,EAGrBO,EAAkB5C,UAC7B,MAAM6C,QAAqBT,MAAM,GAADb,OAC3BK,EAAQ,UAAAL,OAASjC,EAAO,YAC3BuC,GAEF,aAAagB,EAAaR,MAAM,C","sources":["components/Cast/Cast.jsx","components/services/themoviebd-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Blocks } from 'react-loader-spinner';\nimport { GetMovieCredits } from 'components/services/themoviebd-api';\nimport noImg from '../../images/1716bf8da8ff566983fca0387acc8d35.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, setMovieCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const fetchCast = await GetMovieCredits(movieId);\n        setMovieCast(fetchCast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <h2>\n          <Blocks\n            height=\"80\"\n            width=\"80\"\n            color=\"#4fa94d\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            visible={true}\n          />\n        </h2>\n      )}\n      {error && <h2>{error.message}</h2>}\n      {movieCast && (\n        <>\n          {movieCast.cast.length === 0 ? (\n            <p>We don't have any cast for this movie</p>\n          ) : (\n            movieCast.cast.map(element => {\n              return (\n                <>\n                  <img\n                    src={\n                      element.profile_path\n                        ? `https://image.tmdb.org/t/p/w500${element.profile_path}`\n                        : noImg\n                    }\n                    width=\"100\"\n                    alt={element.name}\n                  />\n                  <h3>{element.name}</h3>\n                  <p>\n                    <b>Character:</b> {element.character}\n                  </p>\n                </>\n              );\n            })\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const API_KEY_ACCESS =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTE1MDIzZDViOWQ3ZWRjMWE4NDhhY2YxODc2YjQ0NSIsInN1YiI6IjY2MGU1N2E5NmRjNTA3MDE2NDU2NGYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7g5_S73d_kmCsOujpak_TASQ3OBWAJbyGG52uGpicY8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + API_KEY_ACCESS,\n  },\n};\n\nexport const GetTrendings = async () => {\n  const fetchTrendings = await fetch(`${BASE_URL}trending/movie/day`, options);\n  return await fetchTrendings.json();\n};\n\nexport const SearchMovies = async query => {\n  const fetchMovies = await fetch(\n    `${BASE_URL}search/movie?include_adult=true&query=${query}`,\n    options\n  );\n  return await fetchMovies.json();\n};\n\nexport const GetMovieDetails = async movieId => {\n  const fetchMoviesDetails = await fetch(`${BASE_URL}movie/${movieId}`, options);\n  return await fetchMoviesDetails.json();\n};\n\nexport const GetMovieCredits = async movieId => {\n  const fetchCredits = await fetch(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return await fetchCredits.json();\n};\n\nexport const GetMovieReviews = async movieId => {\n  const fetchReviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return await fetchReviews.json();\n};\n"],"names":["Cast","movieId","useParams","movieCast","setMovieCast","useState","isLoading","setIsLoading","error","setError","useEffect","async","fetchCast","GetMovieCredits","fetchMovieCast","_jsxs","_Fragment","children","_jsx","Blocks","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","message","cast","length","map","element","src","profile_path","concat","noImg","alt","name","character","BASE_URL","options","method","headers","accept","Authorization","GetTrendings","fetchTrendings","fetch","json","SearchMovies","fetchMovies","query","GetMovieDetails","fetchMoviesDetails","fetchCredits","GetMovieReviews","fetchReviews"],"sourceRoot":""}