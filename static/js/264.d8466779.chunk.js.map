{"version":3,"file":"static/js/264.d8466779.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/services/themoviebd-api.js","pages/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const MovieImg = styled.img`\n  margin-right: 10px;\n`;\n","import { List, MovieImg, MovieItem, MovieLink } from './MoviesList.styled';\n\nfunction MoviesList({ list, location, path = '' }) {\n  return (\n    <List>\n      {list.map(movie => (\n        <MovieLink to={`${path}${movie.id}`} state={{ from: location }}>\n          <MovieItem key={movie.id}>\n            {\n              <MovieImg\n                src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                width=\"100\"\n                alt={movie.title}\n              />\n            }\n            {movie.title}({movie.release_date.slice(0, 4)})\n          </MovieItem>\n        </MovieLink>\n      ))}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","const API_KEY_ACCESS =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTE1MDIzZDViOWQ3ZWRjMWE4NDhhY2YxODc2YjQ0NSIsInN1YiI6IjY2MGU1N2E5NmRjNTA3MDE2NDU2NGYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7g5_S73d_kmCsOujpak_TASQ3OBWAJbyGG52uGpicY8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + API_KEY_ACCESS,\n  },\n};\n\nexport const GetTrendings = async () => {\n  const fetchTrendings = await fetch(`${BASE_URL}trending/movie/day`, options);\n  return await fetchTrendings.json();\n};\n\nexport const SearchMovies = async query => {\n  const fetchMovies = await fetch(\n    `${BASE_URL}search/movie?include_adult=true&query=${query}`,\n    options\n  );\n  return await fetchMovies.json();\n};\n\nexport const GetMovieDetails = async movieId => {\n  const fetchMoviesDetails = await fetch(`${BASE_URL}movie/${movieId}`, options);\n  return await fetchMoviesDetails.json();\n};\n\nexport const GetMovieCredits = async movieId => {\n  const fetchCredits = await fetch(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return await fetchCredits.json();\n};\n\nexport const GetMovieReviews = async movieId => {\n  const fetchReviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return await fetchReviews.json();\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\n\nimport { GetTrendings } from '../components/services/themoviebd-api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nconst Home = () => {\n  const [trendings, setTrendings] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrendings = async () => {\n      try {\n        setIsLoading(true);\n        const moviesFetch = await GetTrendings();\n        setTrendings(moviesFetch.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendings();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {isLoading && (\n        <h2>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"color-ring-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"color-ring-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </h2>\n      )}\n      {error && <h2>{error.message}</h2>}\n      {trendings && (\n        <MoviesList list={trendings} location={location} path=\"movies/\" />\n      )}\n    </>\n  );\n};\n\nexport default Home;"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","MovieLink","Link","_templateObject2","MovieItem","li","_templateObject3","MovieImg","img","_templateObject4","_ref","list","location","path","_jsx","children","map","movie","to","concat","id","state","from","_jsxs","src","backdrop_path","width","alt","title","release_date","slice","BASE_URL","options","method","headers","accept","Authorization","GetTrendings","async","fetchTrendings","fetch","json","SearchMovies","fetchMovies","query","GetMovieDetails","fetchMoviesDetails","movieId","GetMovieCredits","fetchCredits","GetMovieReviews","fetchReviews","Home","trendings","setTrendings","useState","isLoading","setIsLoading","error","setError","useLocation","useEffect","moviesFetch","results","_Fragment","ColorRing","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","message","MoviesList"],"sourceRoot":""}