{"version":3,"file":"static/js/761.203dbc98.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/services/themoviebd-api.js","pages/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  &:hover,\n  &:focus {\n    color: blue;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const MovieImg = styled.img`\n  margin-right: 10px;\n`;\n","import { List, MovieImg, MovieItem, MovieLink } from './MoviesList.styled';\nimport noImg from '../../images/no_image.jpg';\n\nfunction MoviesList({ list, location, path = '' }) {\n  return (\n    <List>\n      {list.map(movie => (\n        // Ключ перемещен на элемент MovieLink\n        <MovieLink key={movie.id} to={`${path}${movie.id}`} state={{ from: location }}>\n          <MovieItem>\n            <MovieImg\n              // Исправлена интерполяция строки\n              src={movie.backdrop_path ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` : noImg}\n              width=\"100\"\n              // Указан альтернативный текст для изображения\n              alt={`Poster for ${movie.title}`}\n            />\n            {movie.title}\n            {/* Условное отображение года выпуска */}\n            {movie.release_date && ` (${movie.release_date.slice(0, 4)})`}\n          </MovieItem>\n        </MovieLink>\n      ))}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","const API_KEY_ACCESS =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTE1MDIzZDViOWQ3ZWRjMWE4NDhhY2YxODc2YjQ0NSIsInN1YiI6IjY2MGU1N2E5NmRjNTA3MDE2NDU2NGYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7g5_S73d_kmCsOujpak_TASQ3OBWAJbyGG52uGpicY8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + API_KEY_ACCESS,\n  },\n};\n\nexport const GetTrendings = async (timeframe = \"day\" ) => {\n  const fetchTrendings = await fetch(`${BASE_URL}trending/movie/${timeframe} `, options);\n  return await fetchTrendings.json();\n};\n\nexport const SearchMovies = async query => {\n  const fetchMovies = await fetch(\n    `${BASE_URL}search/movie?include_adult=true&query=${query}`,\n    options\n  );\n  return await fetchMovies.json();\n};\n\nexport const GetMovieDetails = async movieId => {\n  const fetchMoviesDetails = await fetch(`${BASE_URL}movie/${movieId}`, options);\n  return await fetchMoviesDetails.json();\n};\n\nexport const GetMovieCredits = async movieId => {\n  const fetchCredits = await fetch(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return await fetchCredits.json();\n};\n\nexport const GetMovieReviews = async movieId => {\n  const fetchReviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return await fetchReviews.json();\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\n\nimport { GetTrendings } from '../components/services/themoviebd-api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendings, setTrendings] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeframe, setTimeframe] = useState('day'); // Добавлено состояние для выбора временного интервала\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrendings = async () => {\n      try {\n        setIsLoading(true);\n        const moviesFetch = await GetTrendings(timeframe); // Обновлен вызов с параметром временного интервала\n        setTrendings(moviesFetch.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendings();\n  }, [timeframe]); // Обновлен массив зависимостей useEffect\n\n  const handleTimeframeChange = (event) => { // Обработчик изменения временного интервала\n    setTimeframe(event.target.value);\n  };\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <div>\n        <label>\n          Choose timeframe:\n          <select value={timeframe} onChange={handleTimeframeChange}>\n            <option value=\"day\">Day</option>\n            <option value=\"week\">Week</option>\n            <option value=\"month\">Month</option>\n            <option value=\"year\">Year</option>\n          </select>\n        </label>\n      </div>\n      {isLoading && (\n        <div className=\"loader\">\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"color-ring-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"color-ring-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </div>\n      )}\n      {error && <h2>Something went wrong: {error.message}</h2>}\n      {trendings && (\n        <MoviesList list={trendings} location={location} path=\"movies/\" />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","MovieLink","Link","_templateObject2","MovieItem","li","_templateObject3","MovieImg","img","_templateObject4","_ref","list","location","path","_jsx","children","map","movie","to","concat","id","state","from","_jsxs","src","backdrop_path","noImg","width","alt","title","release_date","slice","BASE_URL","options","method","headers","accept","Authorization","GetTrendings","async","timeframe","arguments","length","undefined","fetchTrendings","fetch","json","SearchMovies","fetchMovies","query","GetMovieDetails","fetchMoviesDetails","movieId","GetMovieCredits","fetchCredits","GetMovieReviews","fetchReviews","Home","trendings","setTrendings","useState","isLoading","setIsLoading","error","setError","setTimeframe","useLocation","useEffect","moviesFetch","results","_Fragment","value","onChange","event","target","className","ColorRing","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","message","MoviesList"],"sourceRoot":""}